# --- –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ --- #
import tkinter as tk
from tkinter import messagebox
import bcrypt

# --- –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π --- #
users_db = []

# --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è --- #
def register_user():
    username = username_entry.get()
    password = password_entry.get()

    if username and password:
        salt = bcrypt.gensalt()
        hashed_password = bcrypt.hashpw(password.encode("utf-8"), salt)
        users_db.append({"username": username, "hashed_password": hashed_password})
        messagebox.showinfo("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!")
    else:
        messagebox.showerror("–û—à–∏–±–∫–∞", "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–∞—Ä–æ–ª—å –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏!")

# --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è --- #
def login_user():
    username = username_entry.get()
    password = password_entry.get()

    for user in users_db:
        if user["username"] == username:
            if bcrypt.checkpw(password.encode("utf-8"), user["hashed_password"]):
                messagebox.showinfo("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–ª—É–±, {username}!")
                app.configure(bg="green")
                return
            else:
                messagebox.showerror("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", "–ü–∞—Ä–æ–ª—å –Ω–µ–≤–µ—Ä–Ω—ã–π, —Ç—ã —Ç–æ—á–Ω–æ –∑–∞ –Ω–∞—Å? üßê")
                app.configure(bg="red")
                return

    messagebox.showerror("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –Ω–µ –Ω–∞–π–¥–µ–Ω!")

# --- –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã --- #
app = tk.Tk()
app.title("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
app.geometry("500x650")

# --- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è --- #
tk.Label(app, text="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:").pack(pady=5)
username_entry = tk.Entry(app)
username_entry.pack(pady=5)

# --- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è --- #
tk.Label(app, text="–ü–∞—Ä–æ–ª—å:").pack(pady=5)
password_entry = tk.Entry(app, show="*")
password_entry.pack(pady=5)

# --- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ --- #
tk.Button(app, text="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", command=register_user).pack(pady=10)
tk.Button(app, text="–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", command=login_user).pack(pady=10)

# --- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ --- #
character_image = tk.PhotoImage(file="character.png")
tk.Label(app, image=character_image).pack(pady=10)

# --- –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã --- #
app.mainloop()